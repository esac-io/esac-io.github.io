#+title: esac-io's Resume
#+date: <2020-01-14 Tue 16:30>
#+created: <2020-01-14 Tue 16:30>
#+creator: resume
#+setupfile: ../include/home.org
#+export_file_name: resume.html
#+html_head: <link href="css/site.css" rel="stylesheet">
#+html_head_extra: <link href="https://esac-io.github.org" rel="canonical">
#+options: H:3

* Isaac (esac-io)
  Email | [[http://www.github.com/esac-io][Github]] | [[https://www.linkedin.com][Linkedin]]

* ▐ Bio

  I'm an information technology professional
  with a Bachelor's Degree in Computer Engineering.
  My studies are focused on: algorithms, data oriented
  programming, software architecture, low level technologies
  and mathematical concepts applied to computer science.
  #+BEGIN_SRC
  #+END_SRC

* ▐ Experience
** Devops Engineer: Rhizom Foundation, 2019 - Present
*** Maestro

    Maestro is a container orchestrator,
    written purely in shellscript (sh), which automates
    the construction cycle of the composition (set of containers)
    and their instantiation. It also provides a clear and intuitive
    interface for applying various docker and docker-compose related actions,
    making it easy to manage the application in question,
    its dependencies, and its infrastructure.
    Its flexibility allows it to be used at various stages
    of the development cycle (continuous integration, continuous deployment).

    * Assignments:

    #+BEGIN_SRC
    - Research
    - Software Architecture
    - Software Development
    - Tests
    - Installation
    - Deployment
    #+END_SRC

    * Applied technologies:

    #+BEGIN_SRC
    - sh
    - docker
    - docker-compose
    - git
    - curl
    - awk
    #+END_SRC

*** Metrics

    This project consisted of acquiring and visualizing metrics
    of projects under development / production.
    Captured metrics are saved as a time series in
    Prometheus. Graphana consumes this time series
    and provides means of constructing  graphs that will be
    used for future visualization and analysis.

    A Shellscript (sh) was created to deal with the
    docker statistics (parse and push)
    and for the other projects a Go module was developed,
    which is based on Prometheus (client-golang).

    - Assignments:

      #+BEGIN_SRC emacs-lisp
      - Research
      - Software Development
      - Metrics
         . Gathering / Graphics / Analysis
      - Tests
      - Installation
      - Deployment
      #+END_SRC

    - Applied technologies:

    #+BEGIN_SRC emacs-lisp
     - Go
     - Shellscript
     - Docker (stats command)
     - Grafana
     - Pushgateway
     - Pometheus
        . client-golang (library)
    #+END_SRC


    # *** Server
    #     Applied technologies:
    #     - FreeBSD
    #     - ZFS
    #       * ZPOOLS -  (RAID, MIRROR, ...)
    #     - OpenSSH
    #     - Bhyve
    #     - Vm-bhyve (Cloud)
    #       - ISOS
    #         * FreeBSD
    #         * OpenBSD
    #         * Alpine
    #         * Debian
    #         * Ubuntu
    #     - Kubernets
    #     - Docker
    #     - Docker Compose
    #     - Samba
    #     - NFS

*** Infra
** Computer Engineer: Loopce (2014 - 2018)
*** LOOPKEY

    The Loopkey is an embedded system, designed to be coupled to any eletronic lock
    device, adding to it more functionality and security.
    The mobile application (android/ios) is used to control the
    loopkey (lock device). The communication is made using the bluetooth
    protocol and the security of the channel is guaranteed by Speck
    encryption algorithm.

    * Assignments:

    #+BEGIN_SRC
    - Research
    - Software Architecture
    - Firmware Programming
    - Optimization
    - Debugging
    - Tests
    - Deployment
    #+END_SRC

    * Applied technologies:

    #+BEGIN_SRC
      - C
      - Python
      - OpenOCD
      - Nodic SDK
      - Bluetooth
      - Speck (Cryptograph Algorithm)
    #+END_SRC

*** CAVIT

    The project aimed to inspect the dimensions
    of credit cards (mainly the cavity reserved for the EMV chip)
    through image processing algorithms. The input image
    was captured by a high precision camera and its processing
    resulted in metrics that could be further analyzed.

    * Assignments:

      #+BEGIN_SRC sh
      - Software Architecture
      - Full stack development
      - Debugging
      #+END_SRC

    * Applied technologies:
    #+BEGIN_SRC
      - C++
      - Qt
      - OpenCV
      - Python
      - Cmake
    #+END_SRC

* ▐ Education
** Bachelor's deegre (2011 - 2015)
   Computer Engineering, UNB
** Courses
*** Nand2Tetris

    Nand2Tetris, is a course that aims to engineer a modern
    computer using only as a building block the NAND logic gate.

    - https://www.nand2tetris.org

** Books
*** The Elements of Computing Systems: Building a Modern Computer from First Principles
    Noam Nisan, Shimon Schocken
*** Mathematics for Computer Science (2017)
    Eric Lehman, F Tom Leighton, Albert R Meyer
*** The Design and Analysis of Computer Algorithms (1974)
    Alfred V. Aho, John E. Hopcroft, Jeffrey D. Ullman
*** Real-Time Collision Detection (2004)
    Christer Ericson
*** Advanced Algorithmic Trading (2017)
    Mike Halls Moore
* ▐ Achievements
** First place: Hackathon Civico Cotidiano, Cotidiano Aceleradora (2016)

   The hackathon theme was the application of technology to
   solve social problems, our team was the winner through the
   creation of an android app (chegouSUS) which tells you when
   the medicine is available in the single health system.

** Frist place: Cyber Security Challenge, Maxtera/Boeing (2014)

   Our team solve a series of challenges related to information
   security in order to gain access to diverse systems.

* ▐ Lectures
** Cryptorave: Fuzzing in pratice, finding software bugs (2014)
* ▐ Languages
** English
   Full professional proficiency
** Portuguese
   Native or bilingual proficiency
** Spanish
   Limited working proficiency

* ▐ Skills
**** ▐ Programming Languages

     #+BEGIN_SRC
  - C / C++
  - Go
  - R
  - Lisp
  - ShellScript
    . Sh
    . Fish
  - Python
  - Lua
  - Perl
  - Octave
  - Vhdl
  - Sql
     #+END_SRC

**** ▐ Tools & Tecnologies

     #+BEGIN_SRC
  - Emacs
  - FreeBSD
  - Vm-bhyve
  - Linux
  - Git
  - Fish
  - Jails
  - Docker
  - Docker-compose
  - Prometheus / Pushgateway
  - Grafana
  - OpenOCD
  - CMake
  - SQLite3
  - Clang / Gcc / Gdb
  - Radare
     #+END_SRC

** ▐ Others Interests
   -------------------------------------
   - Literature
   - History
   - Mathematics
   - Finance
   - Traveling
   - Trekking
   - Nutrition
   - Agriculture
   - DIY
